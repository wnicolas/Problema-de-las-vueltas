/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package problema.de.las.monedas;

import javax.swing.JLabel;
import javax.swing.JTextField;

/**
 *
 * @author asus
 */
public class Vista extends javax.swing.JFrame {

    public JTextField txtValores[];
    public JLabel matrizLabel[][];
    public int valores[];
    public double matriz[][];
    public final double infinito = Double.POSITIVE_INFINITY;

    public static double min(double a, double b) {

        if (a < b) {
            return a;
        } else if (b < a) {
            return b;
        } else {
            return a;
        }
    }

    public Vista() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtMonedas = new javax.swing.JTextField();
        txtVueltas = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        btnCambio = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtMonedas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMonedasActionPerformed(evt);
            }
        });

        jLabel1.setText("NÃºmero de monedas");

        jLabel2.setText("Valor de vueltas");

        jButton1.setText("Valor monedas");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnCambio.setText("Cambio");
        btnCambio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCambioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtMonedas, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(94, 94, 94)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtVueltas, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCambio)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMonedas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtVueltas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(btnCambio)
                .addContainerGap(442, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        txtValores = new JTextField[Integer.parseInt(txtMonedas.getText())];
        valores = new int[Integer.parseInt(txtMonedas.getText())];
        for (int i = 0; i < valores.length; i++) {
            JTextField txtval = new JTextField();
            this.add(txtval);
            txtval.setBounds(60 + 50 * i, 100, 30, 30);
            txtValores[i] = txtval;

        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtMonedasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMonedasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMonedasActionPerformed

    private void btnCambioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCambioActionPerformed
        for (int i = 0; i < valores.length; i++) {
            valores[i] = Integer.parseInt(txtValores[i].getText());

        }

        int monedas = Integer.parseInt(txtMonedas.getText());
        int vueltas = Integer.parseInt(txtVueltas.getText());

        matriz = new double[monedas + 1][vueltas + 1];
        matrizLabel = new JLabel[monedas + 1][vueltas + 1];

        for (int j = 0; j < (vueltas + 1); j++) {
            matriz[0][j] = infinito;
        }
        for (int i = 1; i < monedas + 1; i++) {
            matriz[i][0] = 0;
        }

        for (int i = 1; i < (monedas + 1); i++) {
            for (int j = 1; j < (vueltas + 1); j++) {

                if (i == 1 && j < valores[i - 1]) {
                    matriz[i][j] = infinito;

                } else if (i == 1) {
                    matriz[i][j] = (1 + (matriz[1][j - valores[0]]));
                } else if (j < valores[i - 1]) {
                    matriz[i][j] = matriz[i - 1][j];
                } else {

                    matriz[i][j] = min(matriz[i - 1][j], 1 + (matriz[i][j - valores[i - 1]]));
                }
            }

        }

        for (int i = 0; i < monedas; i++) {
            JLabel etiqueta = new JLabel();
            add(etiqueta);
            etiqueta.setText("$" + valores[i]);
            etiqueta.setBounds(20, 275 + i * 75, 100, 100);
        }

        for (int j = 0; j <= vueltas; j++) {
            JLabel etiqueta = new JLabel();
            add(etiqueta);
            etiqueta.setText("#" + j);
            etiqueta.setBounds(110 + j * 70, 175, 100, 100);
        }

        for (int i = 0; i < monedas + 1; i++) {
            for (int j = 0; j < vueltas + 1; j++) {

                JLabel etiqueta = new JLabel();
                add(etiqueta);
                etiqueta.setText("" + matriz[i][j]);
                etiqueta.setBounds(100 + j * 70, 200 + i * 75, 100, 100);

            }

        }
        for (int i = 0; i < monedas + 1; i++) {
            JLabel etiqueta = new JLabel();
            etiqueta.setText("Infinity");
            matrizLabel[0][i] = etiqueta;
        }

        for (int i = 1; i < monedas + 1; i++) {
            for (int j = 1; j < vueltas + 1; j++) {

                if (i == 1) {
                    if (j % valores[i - 1] == 0) {
                        JLabel etiqueta = new JLabel();
                        add(etiqueta);
                        int div = j / valores[i - 1];
                        etiqueta.setText(div + ":" + valores[i - 1]);
                        matrizLabel[i][j] = etiqueta;
                        etiqueta.setBounds(100 + j * 70, 220 + i * 75, 100, 100);
                    } else {
                        JLabel etiqueta = new JLabel();
                        add(etiqueta);
                        etiqueta.setText("Infinity");
                        matrizLabel[i][j] = etiqueta;
                        etiqueta.setBounds(100 + j * 70, 220 + i * 75, 100, 100);
                    }
                } else if (j % valores[i - 1] == 0) {
                    JLabel etiqueta = new JLabel();
                    add(etiqueta);
                    int div = j / valores[i - 1];
                    etiqueta.setText(div + ":" + valores[i - 1]);
                    matrizLabel[i][j] = etiqueta;
                    etiqueta.setBounds(100 + j * 70, 220 + i * 75, 100, 100);

                } else if (j < valores[i - 1]) {
                    JLabel etiqueta = new JLabel();
                    add(etiqueta);
                    etiqueta.setText(matrizLabel[i - 1][j].getText());
                    matrizLabel[i][j] = etiqueta;
                    etiqueta.setBounds(100 + j * 70, 220 + i * 75, 100, 100);
                } else if (matrizLabel[i - 1][j].getText().equalsIgnoreCase("Infinity") || j > valores[i - 1]) {

                    int a = j;
                    JLabel etiqueta = new JLabel();
                    int div = a / valores[i - 1];
                    int resto = a % valores[i - 1];

                    if ((matrizLabel[i - 1][resto].getText().equalsIgnoreCase("Infinity") && (matrizLabel[i - 1][j].getText().equalsIgnoreCase("Infinity")))) {
                        int res = j - valores[i - 1];
                        add(etiqueta);
                        etiqueta.setText(matrizLabel[i][res].getText() + "1:" + valores[i - 1]);
                        matrizLabel[i][j] = etiqueta;
                        etiqueta.setBounds(100 + j * 70, 220 + i * 75, 100, 100);
                    } else if (matrizLabel[i - 1][resto].getText().equalsIgnoreCase("Infinity")) {
                        add(etiqueta);
                        etiqueta.setText(matrizLabel[i - 1][j].getText());
                        matrizLabel[i][j] = etiqueta;
                        etiqueta.setBounds(100 + j * 70, 220 + i * 75, 100, 100);
                    } else {
                        add(etiqueta);
                        etiqueta.setText(div + ":" + valores[i - 1] + "+" + matrizLabel[i - 1][resto].getText());
                        matrizLabel[i][j] = etiqueta;
                        etiqueta.setBounds(100 + j * 70, 220 + i * 75, 100, 100);
                    }

                }

            }

        }

    }//GEN-LAST:event_btnCambioActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vista().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnCambio;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    public javax.swing.JTextField txtMonedas;
    public javax.swing.JTextField txtVueltas;
    // End of variables declaration//GEN-END:variables
}
